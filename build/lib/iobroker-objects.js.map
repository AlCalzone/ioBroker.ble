{
  "version": 3,
  "sources": ["../../src/lib/iobroker-objects.ts"],
  "sourcesContent": ["import type {\n\tChannelObjectDefinition,\n\tDeviceObjectDefinition,\n\tStateObjectDefinition,\n} from \"../plugins/plugin\";\nimport { Global as _ } from \"./global\";\nimport type { PeripheralInfo } from \"./scanProcessInterface\";\n\n/** Extends a device object in the ioBroker objects DB */\nexport async function extendDevice(\n\tdeviceId: string,\n\tperipheral: PeripheralInfo,\n\tobject: DeviceObjectDefinition,\n): Promise<void> {\n\tconst original = (await _.objectCache.getObject(\n\t\t`${_.adapter.namespace}.${deviceId}`,\n\t)) as ioBroker.DeviceObject | undefined;\n\t// update the object while preserving the existing properties\n\tconst updated: ioBroker.SettableObject = {\n\t\ttype: \"device\",\n\t\tcommon: {\n\t\t\tname: peripheral.advertisement.localName,\n\t\t\t...object.common,\n\t\t\t...(original && original.common),\n\t\t},\n\t\tnative: {\n\t\t\tid: peripheral.id,\n\t\t\taddress: peripheral.address,\n\t\t\taddressType: peripheral.addressType,\n\t\t\tconnectable: peripheral.connectable,\n\t\t\t...object.native,\n\t\t\t...(original && original.native),\n\t\t},\n\t};\n\n\t// check if we have to update anything\n\tif (\n\t\toriginal == null ||\n\t\tJSON.stringify(original.common) !== JSON.stringify(updated.common) ||\n\t\tJSON.stringify(original.native) !== JSON.stringify(updated.native)\n\t) {\n\t\t_.adapter.log.debug(\n\t\t\t`${\n\t\t\t\toriginal == null ? \"creating\" : \"updating\"\n\t\t\t} device object ${deviceId}`,\n\t\t);\n\t\tawait _.adapter.setObjectAsync(deviceId, updated);\n\t}\n}\n\nexport async function extendChannel(\n\tchannelId: string,\n\tobject: ChannelObjectDefinition,\n): Promise<void> {\n\tconst original = (await _.objectCache.getObject(\n\t\t`${_.adapter.namespace}.${channelId}`,\n\t)) as ioBroker.ChannelObject | undefined;\n\t// update the object while preserving the existing properties\n\tconst updated: ioBroker.SettableObject = {\n\t\ttype: \"channel\",\n\t\tcommon: {\n\t\t\tname: channelId,\n\t\t\t...object.common,\n\t\t\t...(original && original.common),\n\t\t},\n\t\tnative: {\n\t\t\t...object.native,\n\t\t\t...(original && original.native),\n\t\t},\n\t};\n\n\t// check if we have to update anything\n\tif (\n\t\toriginal == null ||\n\t\tJSON.stringify(original.common) !== JSON.stringify(updated.common) ||\n\t\tJSON.stringify(original.native) !== JSON.stringify(updated.native)\n\t) {\n\t\t_.adapter.log.debug(\n\t\t\t`${\n\t\t\t\toriginal == null ? \"creating\" : \"updating\"\n\t\t\t} channel object ${channelId}`,\n\t\t);\n\t\tawait _.adapter.setObjectAsync(channelId, updated);\n\t}\n}\n\nexport async function extendState(\n\tstateId: string,\n\tobject: StateObjectDefinition,\n): Promise<void> {\n\tconst original = (await _.objectCache.getObject(\n\t\t`${_.adapter.namespace}.${stateId}`,\n\t)) as ioBroker.StateObject | undefined;\n\t// update the object while preserving the existing properties\n\tconst updated: ioBroker.SettableObject = {\n\t\ttype: \"state\",\n\t\tcommon: {\n\t\t\trole: \"state\",\n\t\t\tread: true,\n\t\t\twrite: false,\n\t\t\tname: stateId,\n\t\t\t...object.common,\n\t\t\t...(original && original.common),\n\t\t},\n\t\tnative: {\n\t\t\t...object.native,\n\t\t\t...(original && original.native),\n\t\t},\n\t};\n\n\t// check if we have to update anything\n\tif (\n\t\toriginal == null ||\n\t\tJSON.stringify(original.common) !== JSON.stringify(updated.common) ||\n\t\tJSON.stringify(original.native) !== JSON.stringify(updated.native)\n\t) {\n\t\t_.adapter.log.debug(\n\t\t\t`${\n\t\t\t\toriginal == null ? \"creating\" : \"updating\"\n\t\t\t} state object ${stateId}`,\n\t\t);\n\t\tawait _.adapter.setObjectAsync(stateId, updated);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,oBAA4B;AAI5B,4BACC,UACA,YACA,QACgB;AAChB,QAAM,WAAY,MAAM,qBAAE,YAAY,UACrC,GAAG,qBAAE,QAAQ,aAAa,UAC3B;AAEA,QAAM,UAAmC;AAAA,IACxC,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,MAAM,WAAW,cAAc;AAAA,OAC5B,OAAO,SACN,YAAY,SAAS;AAAA,IAE1B,QAAQ;AAAA,MACP,IAAI,WAAW;AAAA,MACf,SAAS,WAAW;AAAA,MACpB,aAAa,WAAW;AAAA,MACxB,aAAa,WAAW;AAAA,OACrB,OAAO,SACN,YAAY,SAAS;AAAA,EAE3B;AAGA,MACC,YAAY,QACZ,KAAK,UAAU,SAAS,MAAM,MAAM,KAAK,UAAU,QAAQ,MAAM,KACjE,KAAK,UAAU,SAAS,MAAM,MAAM,KAAK,UAAU,QAAQ,MAAM,GAChE;AACD,yBAAE,QAAQ,IAAI,MACb,GACC,YAAY,OAAO,aAAa,4BACf,UACnB;AACA,UAAM,qBAAE,QAAQ,eAAe,UAAU,OAAO;AAAA,EACjD;AACD;AAEA,6BACC,WACA,QACgB;AAChB,QAAM,WAAY,MAAM,qBAAE,YAAY,UACrC,GAAG,qBAAE,QAAQ,aAAa,WAC3B;AAEA,QAAM,UAAmC;AAAA,IACxC,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,MAAM;AAAA,OACH,OAAO,SACN,YAAY,SAAS;AAAA,IAE1B,QAAQ,kCACJ,OAAO,SACN,YAAY,SAAS;AAAA,EAE3B;AAGA,MACC,YAAY,QACZ,KAAK,UAAU,SAAS,MAAM,MAAM,KAAK,UAAU,QAAQ,MAAM,KACjE,KAAK,UAAU,SAAS,MAAM,MAAM,KAAK,UAAU,QAAQ,MAAM,GAChE;AACD,yBAAE,QAAQ,IAAI,MACb,GACC,YAAY,OAAO,aAAa,6BACd,WACpB;AACA,UAAM,qBAAE,QAAQ,eAAe,WAAW,OAAO;AAAA,EAClD;AACD;AAEA,2BACC,SACA,QACgB;AAChB,QAAM,WAAY,MAAM,qBAAE,YAAY,UACrC,GAAG,qBAAE,QAAQ,aAAa,SAC3B;AAEA,QAAM,UAAmC;AAAA,IACxC,MAAM;AAAA,IACN,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,OACH,OAAO,SACN,YAAY,SAAS;AAAA,IAE1B,QAAQ,kCACJ,OAAO,SACN,YAAY,SAAS;AAAA,EAE3B;AAGA,MACC,YAAY,QACZ,KAAK,UAAU,SAAS,MAAM,MAAM,KAAK,UAAU,QAAQ,MAAM,KACjE,KAAK,UAAU,SAAS,MAAM,MAAM,KAAK,UAAU,QAAQ,MAAM,GAChE;AACD,yBAAE,QAAQ,IAAI,MACb,GACC,YAAY,OAAO,aAAa,2BAChB,SAClB;AACA,UAAM,qBAAE,QAAQ,eAAe,SAAS,OAAO;AAAA,EAChD;AACD;",
  "names": []
}
