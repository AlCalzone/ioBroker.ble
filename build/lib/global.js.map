{
  "version": 3,
  "sources": ["../../src/lib/global.ts"],
  "sourcesContent": ["\uFEFFimport { filter as objFilter } from \"alcalzone-shared/objects\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport type { ObjectCache } from \"./object-cache\";\n\nexport class Global {\n\tprivate static _adapter: ioBroker.Adapter;\n\tpublic static get adapter(): ioBroker.Adapter {\n\t\treturn Global._adapter;\n\t}\n\tpublic static set adapter(adapter: ioBroker.Adapter) {\n\t\tGlobal._adapter = adapter;\n\t}\n\n\tprivate static _objectCache: ObjectCache;\n\tpublic static get objectCache(): ObjectCache {\n\t\treturn Global._objectCache;\n\t}\n\tpublic static set objectCache(cache: ObjectCache) {\n\t\tGlobal._objectCache = cache;\n\t}\n\n\t/**\n\t * Kurzschreibweise f\u00FCr die Ermittlung mehrerer Objekte\n\t * @param id\n\t */\n\tpublic static async $$(\n\t\tpattern: string,\n\t\ttype: ioBroker.ObjectType,\n\t\trole?: string,\n\t): Promise<Record<string, ioBroker.Object>> {\n\t\tconst objects = (await Global._adapter.getForeignObjectsAsync(\n\t\t\tpattern,\n\t\t\ttype,\n\t\t)) as Record<string, ioBroker.Object>;\n\t\tif (role) {\n\t\t\treturn objFilter(objects, (o) => o.common.role === role);\n\t\t} else {\n\t\t\treturn objects;\n\t\t}\n\t}\n\n\t// Workaround f\u00FCr unvollst\u00E4ndige Adapter-Upgrades\n\tpublic static async ensureInstanceObjects(): Promise<void> {\n\t\t// read io-package.json\n\t\tconst ioPack = JSON.parse(\n\t\t\tfs.readFileSync(\n\t\t\t\tpath.join(__dirname, \"../../io-package.json\"),\n\t\t\t\t\"utf8\",\n\t\t\t),\n\t\t);\n\n\t\tif (\n\t\t\tioPack.instanceObjects == null ||\n\t\t\tioPack.instanceObjects.length === 0\n\t\t)\n\t\t\treturn;\n\n\t\t// wait for all instance objects to be created\n\t\tconst setObjects = (ioPack.instanceObjects as ioBroker.Object[]).map(\n\t\t\t(obj) => Global._adapter.setObjectNotExistsAsync(obj._id, obj),\n\t\t);\n\t\tawait Promise.all(setObjects);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAC,qBAAoC;AACrC,SAAoB;AACpB,WAAsB;AAGf,MAAM,OAAO;AAAA,EAEnB,WAAkB,UAA4B;AAC7C,WAAO,OAAO;AAAA,EACf;AAAA,EACA,WAAkB,QAAQ,SAA2B;AACpD,WAAO,WAAW;AAAA,EACnB;AAAA,EAGA,WAAkB,cAA2B;AAC5C,WAAO,OAAO;AAAA,EACf;AAAA,EACA,WAAkB,YAAY,OAAoB;AACjD,WAAO,eAAe;AAAA,EACvB;AAAA,EAMA,aAAoB,GACnB,SACA,MACA,MAC2C;AAC3C,UAAM,UAAW,MAAM,OAAO,SAAS;AAAA,MACtC;AAAA,MACA;AAAA,IACD;AACA,QAAI,MAAM;AACT,iBAAO,eAAAA,QAAU,SAAS,CAAC,MAAM,EAAE,OAAO,SAAS,IAAI;AAAA,IACxD,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAGA,aAAoB,wBAAuC;AAE1D,UAAM,SAAS,KAAK;AAAA,MACnB,GAAG;AAAA,QACF,KAAK,KAAK,WAAW,uBAAuB;AAAA,QAC5C;AAAA,MACD;AAAA,IACD;AAEA,QACC,OAAO,mBAAmB,QAC1B,OAAO,gBAAgB,WAAW;AAElC;AAGD,UAAM,aAAc,OAAO,gBAAsC;AAAA,MAChE,CAAC,QAAQ,OAAO,SAAS,wBAAwB,IAAI,KAAK,GAAG;AAAA,IAC9D;AACA,UAAM,QAAQ,IAAI,UAAU;AAAA,EAC7B;AACD;",
  "names": ["objFilter"]
}
