{
  "version": 3,
  "sources": ["../../../src/plugins/lib/xiaomi_protocol.ts"],
  "sourcesContent": ["const enum FrameControlFlags {\n\tNewFactory = 1 << 0,\n\tConnected = 1 << 1,\n\tCentral = 1 << 2,\n\tEncrypted = 1 << 3,\n\tMacAddress = 1 << 4,\n\tCapabilities = 1 << 5,\n\tEvent = 1 << 6,\n\tCustomData = 1 << 7,\n\tSubtitle = 1 << 8,\n\tBinding = 1 << 9,\n}\n\nexport enum CapabilityFlags {\n\tConnectable = 1 << 0,\n\tCentral = 1 << 1,\n\tEncrypt = 1 << 2,\n\tIO = (1 << 3) | (1 << 4),\n}\n\nexport enum XiaomiEventIDs_Internal {\n\tTemperature = 0x1004, // temp = value / 10\n\tKettleStatusAndTemperature = 0x1005, // 1 byte status, 1 byte temperature\n\tHumidity = 0x1006, // humidity = value / 10\n\tIlluminance = 0x1007,\n\tMoisture = 0x1008,\n\tFertility = 0x1009,\n\tBattery = 0x100a,\n\tTemperatureAndHumidity = 0x100d, // 2 byte temperature / 10, 2 byte humidity / 10\n}\n\nexport type XiaomiEventIDs =\n\t| \"temperature\"\n\t| \"humidity\"\n\t| \"illuminance\"\n\t| \"moisture\"\n\t| \"fertility\"\n\t| \"battery\"\n\t| \"kettleStatus\";\n\nexport type XiaomiEvent = Partial<Record<XiaomiEventIDs, number>>;\ntype ValueTransform = (\n\tval: number,\n\teventID?: XiaomiEventIDs_Internal,\n) => XiaomiEvent;\n\n// value transforms translate the internal data structure to the external one\n// in most cases this is a 1:1 match\nconst valueTransforms: Partial<\n\tRecord<keyof typeof XiaomiEventIDs_Internal, ValueTransform>\n> & { default: ValueTransform } = {\n\t// by default just pass the value through\n\tdefault: (val, eventID) => {\n\t\tif (eventID! in XiaomiEventIDs_Internal) {\n\t\t\treturn { [XiaomiEventIDs_Internal[eventID!].toLowerCase()]: val };\n\t\t} else {\n\t\t\treturn { [`unknown (0x${eventID!.toString(16)})`]: val };\n\t\t}\n\t},\n\t// TODO: find a nicer way to specify the bit size of temperature - this information exists in the packet!\n\tTemperature: (val) => ({ temperature: toSigned(val, 16) / 10 }),\n\tHumidity: (val) => ({ humidity: val / 10 }),\n\tTemperatureAndHumidity: (val) => ({\n\t\t// the data is read in little-endian (reverse) order,\n\t\t// so val = 0xHHHHTTTT\n\t\thumidity: (val >>> 16) / 10,\n\t\ttemperature: toSigned(val & 0xffff, 16) / 10,\n\t}),\n\tKettleStatusAndTemperature: (val) => ({\n\t\t// the data is read in little-endian (reverse) order, so val = 0xTTSS\n\t\tkettleStatus: val & 0xff,\n\t\ttemperature: val >>> 8,\n\t}),\n};\n\nexport class XiaomiAdvertisement {\n\tpublic constructor(data: Buffer) {\n\t\tif (!data || data.length < 5) {\n\t\t\tthrow new Error(\n\t\t\t\t\"A xiaomi advertisement frame must be at least 5 bytes long\",\n\t\t\t);\n\t\t}\n\t\t// 4 bit version, 12 bit flags\n\t\tconst frameControl = data.readUInt16LE(0);\n\t\tthis._version = frameControl >>> 12;\n\t\tconst flags = frameControl & 0xfff;\n\t\tthis._isNewFactory = (flags & FrameControlFlags.NewFactory) !== 0;\n\t\tthis._isConnected = (flags & FrameControlFlags.Connected) !== 0;\n\t\tthis._isCentral = (flags & FrameControlFlags.Central) !== 0;\n\t\tthis._isEncrypted = (flags & FrameControlFlags.Encrypted) !== 0;\n\t\tthis._hasMacAddress = (flags & FrameControlFlags.MacAddress) !== 0;\n\t\tthis._hasCapabilities = (flags & FrameControlFlags.Capabilities) !== 0;\n\t\tthis._hasEvent = (flags & FrameControlFlags.Event) !== 0;\n\t\tthis._hasCustomData = (flags & FrameControlFlags.CustomData) !== 0;\n\t\tthis._hasSubtitle = (flags & FrameControlFlags.Subtitle) !== 0;\n\t\tthis._isBindingFrame = (flags & FrameControlFlags.Binding) !== 0;\n\n\t\tthis._productID = data.readUInt16LE(2);\n\n\t\tthis._frameCounter = data[4];\n\n\t\t// Avoid creating thousands of unknown(0xabcd) states\n\t\tif (this._isEncrypted) {\n\t\t\tthrow new Error(\"Encrypted advertisements are not supported\");\n\t\t}\n\n\t\t// The actual packet content begins at offset 5\n\t\tlet offset = 5;\n\t\tif (this._hasMacAddress) {\n\t\t\tthis._macAddress = reverseBuffer(\n\t\t\t\tdata.slice(offset, offset + 6),\n\t\t\t).toString(\"hex\");\n\t\t\toffset += 6;\n\t\t}\n\n\t\tif (this._hasCapabilities) {\n\t\t\tthis._capabilities = data[offset];\n\t\t\toffset++;\n\t\t}\n\n\t\tif (this._hasEvent) {\n\t\t\tconst eventID = data.readUInt16LE(offset);\n\t\t\t// const eventName = XiaomiEventIDs_Internal[\n\t\t\t// \teventID\n\t\t\t// ] as keyof typeof XiaomiEventIDs_Internal;\n\t\t\tconst dataLength = data[offset + 2];\n\t\t\tconst eventData = data.slice(offset + 3, offset + 3 + dataLength);\n\t\t\tconst numericData = parseNumberLE(eventData);\n\t\t\t// check if there's a specialized value transform\n\t\t\tif (XiaomiEventIDs_Internal[eventID] in valueTransforms) {\n\t\t\t\tthis._event = (valueTransforms as any)[\n\t\t\t\t\tXiaomiEventIDs_Internal[eventID]\n\t\t\t\t](numericData);\n\t\t\t} else {\n\t\t\t\tthis._event = valueTransforms.default(numericData, eventID);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _productID: number;\n\tpublic get productID(): number {\n\t\treturn this._productID;\n\t}\n\n\tprivate _version: number;\n\tpublic get version(): number {\n\t\treturn this._version;\n\t}\n\n\tprivate _frameCounter: number;\n\tpublic get frameCounter(): number {\n\t\treturn this._frameCounter;\n\t}\n\n\tprivate _isNewFactory: boolean;\n\tpublic get isNewFactory(): boolean {\n\t\treturn this._isNewFactory;\n\t}\n\n\tprivate _isConnected: boolean;\n\tpublic get isConnected(): boolean {\n\t\treturn this._isConnected;\n\t}\n\n\tprivate _isCentral: boolean;\n\tpublic get isCentral(): boolean {\n\t\treturn this._isCentral;\n\t}\n\n\tprivate _isEncrypted: boolean;\n\tpublic get isEncrypted(): boolean {\n\t\treturn this._isEncrypted;\n\t}\n\n\tprivate _hasMacAddress: boolean;\n\tpublic get hasMacAddress(): boolean {\n\t\treturn this._hasMacAddress;\n\t}\n\n\tprivate _macAddress: string | undefined;\n\tpublic get macAddress(): string | undefined {\n\t\treturn this._macAddress;\n\t}\n\n\tprivate _hasCapabilities: boolean;\n\tpublic get hasCapabilities(): boolean {\n\t\treturn this._hasCapabilities;\n\t}\n\n\tprivate _capabilities: number | undefined;\n\tpublic get capabilities(): number | undefined {\n\t\treturn this._capabilities;\n\t}\n\n\tprivate _hasEvent: boolean;\n\tpublic get hasEvent(): boolean {\n\t\treturn this._hasEvent;\n\t}\n\n\tprivate _event: XiaomiEvent | undefined;\n\tpublic get event(): XiaomiEvent | undefined {\n\t\treturn this._event;\n\t}\n\n\tprivate _hasCustomData: boolean;\n\tpublic get hasCustomData(): boolean {\n\t\treturn this._hasCustomData;\n\t}\n\n\tprivate _customData: Buffer | undefined;\n\tpublic get customData(): Buffer | undefined {\n\t\treturn this._customData;\n\t}\n\n\tprivate _hasSubtitle: boolean;\n\tpublic get hasSubtitle(): boolean {\n\t\treturn this._hasSubtitle;\n\t}\n\n\tprivate _isBindingFrame: boolean;\n\tpublic get isBindingFrame(): boolean {\n\t\treturn this._isBindingFrame;\n\t}\n}\n\nfunction reverseBuffer(buf: Buffer): Buffer {\n\tconst ret = Buffer.allocUnsafe(buf.length);\n\tfor (let i = 0; i < buf.length; i++) {\n\t\tret[i] = buf[buf.length - 1 - i];\n\t}\n\treturn ret;\n}\n\nfunction parseNumberLE(\n\tbuf: Buffer,\n\toffset: number = 0,\n\tlength: number = buf.length,\n): number {\n\t// read <length> bytes in LE order\n\tlet value = 0;\n\tfor (let i = offset + length - 1; i >= offset; i--) {\n\t\tvalue = (value << 8) + buf[i];\n\t}\n\treturn value;\n}\n\n/** Converts an unsigned number to a signed one (e.g. 0xffff = 65535 -> -1) */\nfunction toSigned(unsigned: number, size: number): number {\n\tif (unsigned >>> (size - 1) === 1) {\n\t\t// if the first bit is 1, we have a negative number\n\t\treturn unsigned - (1 << size);\n\t} else {\n\t\treturn unsigned;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
