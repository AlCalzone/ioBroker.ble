{
  "version": 3,
  "sources": ["../../src/plugins/xiaomi.ts"],
  "sourcesContent": ["/*!\n * Plugin for Xiaomi devices using the fe95 characteristic\n */\n\nimport { entries } from \"alcalzone-shared/objects\";\nimport { Global as _ } from \"../lib/global\";\nimport type { PeripheralInfo } from \"../lib/scanProcessInterface\";\nimport { XiaomiAdvertisement, type XiaomiEvent } from \"./lib/xiaomi_protocol\";\nimport {\n\tgetServiceData,\n\ttype DeviceObjectDefinition,\n\ttype Plugin,\n\ttype StateObjectDefinition,\n} from \"./plugin\";\n\ninterface XiaomiContext {\n\tevent?: XiaomiEvent;\n}\n\nfunction parseAdvertisementEvent(data: Buffer): XiaomiEvent | undefined {\n\t// try to parse the data\n\tlet advertisement: XiaomiAdvertisement;\n\ttry {\n\t\tadvertisement = new XiaomiAdvertisement(data);\n\t} catch (e) {\n\t\t_.adapter.log.debug(`xiaomi >> failed to parse data`);\n\t\treturn;\n\t}\n\n\tif (!advertisement.hasEvent || advertisement.isBindingFrame) {\n\t\t_.adapter.log.debug(`xiaomi >> The device is not fully initialized.`);\n\t\t_.adapter.log.debug(\n\t\t\t`xiaomi >> Use its app to complete the initialization.`,\n\t\t);\n\t\treturn;\n\t}\n\n\t// succesful - return it\n\treturn advertisement.event;\n}\n\n// remember tested peripherals by their MAC address for 1h\nconst testValidity = 1000 * 3600;\nconst testedPeripherals = new Map<\n\tstring,\n\t{ timestamp: number; result: boolean }\n>();\n\nconst plugin: Plugin<XiaomiContext> = {\n\tname: \"Xiaomi\",\n\tdescription: \"Xiaomi devices\",\n\n\tadvertisedServices: [\"fe95\"],\n\tisHandling: (p) => {\n\t\t// If the peripheral has no serviceData with UUID fe95, this is not for us\n\t\tif (\n\t\t\t!p.advertisement ||\n\t\t\t!p.advertisement.serviceData ||\n\t\t\t!p.advertisement.serviceData.some((entry) => entry.uuid === \"fe95\")\n\t\t)\n\t\t\treturn false;\n\n\t\tconst mac = p.address.toLowerCase();\n\t\tconst cached = testedPeripherals.get(mac);\n\t\tif (cached && cached.timestamp >= Date.now() - testValidity) {\n\t\t\t// we have a recent test result, return it\n\t\t\treturn cached.result;\n\t\t}\n\n\t\t// Try to parse advertisement data as a XiaomiEvent to see if this\n\t\t// is for us\n\t\tlet ret = false;\n\t\tconst data = getServiceData(p, \"fe95\");\n\t\tif (data != undefined) {\n\t\t\tconst event = parseAdvertisementEvent(data);\n\t\t\tret = event != undefined;\n\t\t}\n\t\t// store the test result\n\t\ttestedPeripherals.set(mac, {\n\t\t\ttimestamp: Date.now(),\n\t\t\tresult: ret,\n\t\t});\n\t\treturn ret;\n\t},\n\n\tcreateContext: (peripheral: PeripheralInfo) => {\n\t\tconst data = getServiceData(peripheral, \"fe95\");\n\t\tif (data == undefined) return;\n\n\t\t_.adapter.log.debug(`xiaomi >> got data: ${data.toString(\"hex\")}`);\n\n\t\tconst event = parseAdvertisementEvent(data);\n\t\tif (event == undefined) return;\n\n\t\treturn { event };\n\t},\n\n\tdefineObjects: (context: XiaomiContext) => {\n\t\tif (context == undefined || context.event == undefined) return;\n\n\t\tconst deviceObject: DeviceObjectDefinition = {\n\t\t\t// no special definitions neccessary\n\t\t\tcommon: undefined,\n\t\t\tnative: undefined,\n\t\t};\n\n\t\t// no channels\n\n\t\tconst stateObjects: StateObjectDefinition[] = [];\n\n\t\tconst ret = {\n\t\t\tdevice: deviceObject,\n\t\t\tchannels: undefined,\n\t\t\tstates: stateObjects,\n\t\t};\n\n\t\tconst event = context.event;\n\t\tif (\"temperature\" in event) {\n\t\t\tstateObjects.push({\n\t\t\t\tid: \"temperature\",\n\t\t\t\tcommon: {\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tname: \"Temperature\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tunit: \"\u00B0C\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: undefined,\n\t\t\t});\n\t\t}\n\t\tif (\"humidity\" in event) {\n\t\t\tstateObjects.push({\n\t\t\t\tid: \"humidity\",\n\t\t\t\tcommon: {\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tname: \"Relative Humidity\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tunit: \"%rF\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: undefined,\n\t\t\t});\n\t\t}\n\t\tif (\"illuminance\" in event) {\n\t\t\tstateObjects.push({\n\t\t\t\tid: \"illuminance\",\n\t\t\t\tcommon: {\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tname: \"Illuminance\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tunit: \"lux\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: undefined,\n\t\t\t});\n\t\t}\n\t\tif (\"moisture\" in event) {\n\t\t\tstateObjects.push({\n\t\t\t\tid: \"moisture\",\n\t\t\t\tcommon: {\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tname: \"Moisture\",\n\t\t\t\t\tdesc: \"Moisture of the soil\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tunit: \"%\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: undefined,\n\t\t\t});\n\t\t}\n\t\tif (\"fertility\" in event) {\n\t\t\tstateObjects.push({\n\t\t\t\tid: \"fertility\",\n\t\t\t\tcommon: {\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tname: \"Fertility\",\n\t\t\t\t\tdesc: \"Fertility of the soil\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tunit: \"\u00B5S/cm\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: undefined,\n\t\t\t});\n\t\t}\n\t\tif (\"battery\" in event) {\n\t\t\tstateObjects.push({\n\t\t\t\tid: \"battery\",\n\t\t\t\tcommon: {\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tname: \"Battery\",\n\t\t\t\t\tdesc: \"Battery status of the sensor\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tunit: \"%\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t},\n\t\t\t\tnative: undefined,\n\t\t\t});\n\t\t}\n\t\tif (\"kettleStatus\" in event) {\n\t\t\tstateObjects.push({\n\t\t\t\tid: \"kettleStatus\",\n\t\t\t\tcommon: {\n\t\t\t\t\trole: \"value\",\n\t\t\t\t\tname: \"Kettle status\",\n\t\t\t\t\tdesc: \"What the kettle is currently doing\",\n\t\t\t\t\ttype: \"number\",\n\t\t\t\t\tread: true,\n\t\t\t\t\twrite: false,\n\t\t\t\t\tstates: {\n\t\t\t\t\t\t\"0\": \"Idle\",\n\t\t\t\t\t\t\"1\": \"Heating\",\n\t\t\t\t\t\t\"2\": \"Cooling\",\n\t\t\t\t\t\t\"3\": \"Keeping warm\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tnative: undefined,\n\t\t\t});\n\t\t}\n\t\t// Create objects for unknown events\n\t\tfor (const key of Object.keys(event)) {\n\t\t\tif (key.startsWith(\"unknown \")) {\n\t\t\t\tstateObjects.push({\n\t\t\t\t\tid: key.replace(/[\\(\\)]+/g, \"\").replace(\" \", \"_\"),\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\trole: \"value\",\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: false,\n\t\t\t\t\t},\n\t\t\t\t\tnative: undefined,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\tgetValues: (context: XiaomiContext) => {\n\t\tif (context == null || context.event == null) return;\n\n\t\tfor (const [prop, value] of entries(context.event)) {\n\t\t\t_.adapter.log.debug(`xiaomi >> got ${prop} update => ${value}`);\n\t\t}\n\t\t// The event is simply the value dictionary itself\n\t\treturn context.event;\n\t},\n};\n\nexport = plugin as Plugin;\n"],
  "mappings": "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",
  "names": ["_"]
}
